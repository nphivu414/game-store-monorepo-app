# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type EsrbRating {
  id: Int!
  name: String
  slug: String
}

type Genre {
  id: Int!
  name: String
  slug: String
  gamesCount: Int!
  imageBackground: String
  thumbnailImage: String
  games: [GenreGame!]!
}

type GenreGame {
  id: Int!
  name: String
}

type RawgGenreResponse {
  count: Int!
  nextPage: Int
  results: [Genre!]!
}

type PlatformDetails {
  id: Int!
  name: String
  slug: String
  image: String
  yearEnd: Int!
  yearStart: Int!
  gamesCount: Int!
  imageBackground: String
}

type Platform {
  platform: PlatformDetails!
  releasedAt: String
}

type Publisher {
  id: Int!
  name: String
  slug: String
  gamesCount: Int!
  imageBackground: String
  thumbnailImage: String
  games: [PublisherGame!]!
}

type PublisherGame {
  id: Int!
  name: String
}

type RawgPublisherResponse {
  count: Int!
  nextPage: Int
  results: [Publisher!]!
}

type Screenshot {
  id: Int!
  image: String
  width: Int
  height: Int
  isDeleted: Boolean!
}

type StoreDetails {
  id: Int!
  name: String
  slug: String
  domain: String
  gamesCount: Int!
  imageBackground: String
}

type Store {
  id: Int!
  url: String
  store: StoreDetails!
}

type Tag {
  id: Int!
  name: String
  slug: String
  gamesCount: Int!
  imageBackground: String
  thumbnailImage: String
  games: [TagGame!]!
}

type TagGame {
  id: Int!
  name: String
}

type RawgTagResponse {
  count: Int!
  nextPage: Int
  results: [Tag!]!
}

type TrailerDetails {
  thumbnail: String
  max: String
}

type Trailer {
  id: Int!
  name: String
  preview: String
  data: TrailerDetails!
}

type Game {
  id: Int!
  name: String
  description: String
  backgroundImage: String
  backgroundImageAdditional: String
  thumbnailImageAdditional: String
  thumbnailImage: String
  metacritic: Int
  esrbRating: EsrbRating
  rating: Float
  platforms: [Platform!]
  parentPlatforms: [Platform!]
  genres: [Genre!]
  publishers: [Publisher!]
  stores: [Store!]
  screenshots: [Screenshot!]
  trailers: [Trailer!]
  tags: [Tag!]
}

type RawgGameResponse {
  count: Int!
  nextPage: Int
  results: [Game!]!
}

type Query {
  allGames(page: Int, pageSize: Int, dates: String, ordering: String, tags: String, genres: String, publishers: String, search: String): RawgGameResponse!
  searchGames(page: Int, pageSize: Int, search: String): RawgGameResponse!
  gameDetails(id: Int!): Game!
  gameSeries(id: Int!, page: Int, pageSize: Int): RawgGameResponse!
  allGenres(page: Int, pageSize: Int, ordering: String): RawgGenreResponse!
  allTags(page: Int, pageSize: Int, ordering: String): RawgTagResponse!
  allPublishers(page: Int, pageSize: Int, ordering: String): RawgPublisherResponse!
}
